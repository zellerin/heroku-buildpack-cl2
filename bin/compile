#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Download default or provided version of sbcl if not to the cache
# Use it to load compile.lisp that should dump the application image to the build dir.
# Copy the sbcl binary to the build dir.

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

set -ex
export BUILDPACK_BIN=$(dirname $0) # absolute path of buildpack bin directory
export BUILD_DIR=${1:?Missing build dir}
export CACHE_DIR=${2:?Missing cache dir}
export SBCL_VERSION=${SBCL_VERSION:-1.5.5}
export ASDF_OUTPUT_TRANSLATIONS="/:$CACHE_DIR/$SBCL_VERSION"
SBCL_PATH="$CACHE_DIR/sbcl/sbcl-${SBCL_VERSION}-x86-64-linux"

if [[ -n "$RESET_CACHE" ]]; then
  rm -rf $CACHE_DIR/*
fi

LPDIR="$CACHE_DIR/quicklisp/local-projects"
if [[ ! -d "$LPDIR/pax-like-doc" ]]
then
    install -d "$LPDIR"
    git clone https://github.com/zellerin/pax-like-doc.git "$LPDIR/pax-like-doc"
fi

if [ ! -d "$SBCL_PATH" ]; then
    echo "-----> Fetching sbcl"
    SBCL_PACKAGE="http://prdownloads.sourceforge.net/sbcl/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2"
    mkdir -p "$CACHE_DIR/sbcl" && wget $SBCL_PACKAGE -O -  | tar xjf - -C "$CACHE_DIR/sbcl"
    chmod +x "$SBCL_PATH/run-sbcl.sh"
fi
# add to slug
echo "-----> Starting build"
$CACHE_DIR/sbcl/sbcl-${SBCL_VERSION}-x86-64-linux/run-sbcl.sh --no-sysinit --no-userinit --load "$BUILDPACK_BIN/compile.lisp"
cp -p $CACHE_DIR/sbcl/sbcl-${SBCL_VERSION}-x86-64-linux/src/runtime/sbcl ${BUILD_DIR}/
echo "-----> Build finished"
